buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath('org.springframework.boot:spring-boot-gradle-plugin:1.2.3.RELEASE')
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'spring-boot'
apply plugin: 'war'

springBoot {
    mainClass = 'de.fau.amos4.Application'
}

jar {
    baseName = 'PFB'
    version =  '0.1.0'
}

war {
    baseName = jar.baseName
    version = jar.version
}

configurations {
    providedRuntime
}

repositories {
    mavenCentral()
}

def javaVersion = '1.7'
def javaEncoding = 'UTF-8'
compileJava     { sourceCompatibility = javaVersion; targetCompatibility = javaVersion; options.encoding = javaEncoding }
compileTestJava { sourceCompatibility = javaVersion; targetCompatibility = javaVersion; options.encoding = javaEncoding }

dependencies {
    // Framework
    compile('org.springframework.boot:spring-boot-starter-data-jpa')
    compile('org.springframework.boot:spring-boot-starter-security')
    compile('javax.mail:mail:1.4.1')

    // View technology
    compile('org.springframework.boot:spring-boot-starter-thymeleaf')
    compile('nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect:1.2.8')

    // Persistance
	compile('org.postgresql:postgresql:9.4-1201-jdbc41')
    runtime('org.hsqldb:hsqldb:2.3.2')

    // Zip
    compile('net.lingala.zip4j:zip4j:1.3.2')

    // PDF
    compile('org.apache.pdfbox:pdfbox:1.8.9')

    // Utility
    compile('org.apache.commons:commons-lang3:3.4')
    compile('org.apache.commons:commons-collections4:4.0')

    // Test
    testCompile('junit:junit')
    testCompile('org.springframework.boot:spring-boot-starter-test')

    // Deployment
    providedRuntime('org.springframework.boot:spring-boot-starter-tomcat')
}

idea {
    module {
        downloadJavadoc = true
        downloadSources = true
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.4'
}
